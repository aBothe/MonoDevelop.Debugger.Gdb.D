
This code was extracted via objdump -S -d bin/Debug/toStringdisas > dump.txt
Only lines that contain the absolute address and assembler instructions will be taken

extern(C) export void toStr(Object o, char** firstChar, int* length, bool* isException)
  401ff4:	55                   	push   %rbp
  401ff5:	48 8b ec             	mov    %rsp,%rbp
  401ff8:	48 83 ec 48          	sub    $0x48,%rsp
  401ffc:	53                   	push   %rbx
  401ffd:	41 54                	push   %r12
  401fff:	41 55                	push   %r13
  402001:	41 56                	push   %r14
  402003:	41 57                	push   %r15
  402005:	48 89 7d e0          	mov    %rdi,-0x20(%rbp)
  402009:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
  40200d:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
  402011:	48 89 4d f8          	mov    %rcx,-0x8(%rbp)
{
	string s;
  402015:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
  40201c:	00 
  40201d:	48 c7 45 c8 00 00 00 	movq   $0x0,-0x38(%rbp)
  402024:	00 
	try{
		s = o.toString();
  402025:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
  402029:	48 8b 07             	mov    (%rdi),%rax
  40202c:	48 ff 50 08          	rex.W callq *0x8(%rax)
  402030:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  402034:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
		*isException = false;
  402038:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  40203c:	c6 01 00             	movb   $0x0,(%rcx)
  40203f:	eb 1b                	jmp    40205c <toStr+0x68>
	}
	catch(Exception ex)
	{
		*isException=true;
  402041:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  402045:	c6 02 01             	movb   $0x1,(%rdx)
		s = ex.msg;
  402048:	48 8b 5d d0          	mov    -0x30(%rbp),%rbx
  40204c:	48 8b 53 18          	mov    0x18(%rbx),%rdx
  402050:	48 8b 43 10          	mov    0x10(%rbx),%rax
  402054:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  402058:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	}

	if(s == null)
  40205c:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
  402061:	75 2f                	jne    402092 <toStr+0x9e>
  402063:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  402067:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  40206b:	48 89 d6             	mov    %rdx,%rsi
  40206e:	48 31 ff             	xor    %rdi,%rdi
  402071:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
  402075:	33 c0                	xor    %eax,%eax
  402077:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi)
  402079:	75 17                	jne    402092 <toStr+0x9e>
	{
		*length = 0;
  40207b:	48 8b 5d f0          	mov    -0x10(%rbp),%rbx
  40207f:	c7 03 00 00 00 00    	movl   $0x0,(%rbx)
		*firstChar = null;
  402085:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  402089:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
  402090:	eb 14                	jmp    4020a6 <toStr+0xb2>
	}
	else{
		*length = cast(int)s.length;
  402092:	8b 55 c0             	mov    -0x40(%rbp),%edx
  402095:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  402099:	89 16                	mov    %edx,(%rsi)
		*firstChar = cast(char*)s;
  40209b:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  40209f:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
  4020a3:	48 89 0b             	mov    %rcx,(%rbx)
	}
}
  4020a6:	41 5f                	pop    %r15
  4020a8:	41 5e                	pop    %r14
  4020aa:	41 5d                	pop    %r13
  4020ac:	41 5c                	pop    %r12
  4020ae:	5b                   	pop    %rbx
  4020af:	c9                   	leaveq 
  4020b0:	c3                   	retq   
  4020b1:	0f 1f 00             	nopl   (%rax)